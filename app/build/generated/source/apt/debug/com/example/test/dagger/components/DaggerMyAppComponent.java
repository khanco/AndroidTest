// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.example.test.dagger.components;

import android.app.Application;
import com.example.test.dagger.modules.MyAppModule;
import com.example.test.dagger.modules.MyAppModule_ProvideMyAppFactory;
import dagger.internal.Preconditions;

public final class DaggerMyAppComponent implements MyAppComponent {
  private MyAppModule myAppModule;

  private DaggerMyAppComponent(Builder builder) {
    initialize(builder);
  }

  public static Builder builder() {
    return new Builder();
  }

  @SuppressWarnings("unchecked")
  private void initialize(final Builder builder) {
    this.myAppModule = builder.myAppModule;
  }

  @Override
  public Application app() {
    return Preconditions.checkNotNull(
        MyAppModule_ProvideMyAppFactory.proxyProvideMyApp(myAppModule),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static final class Builder {
    private MyAppModule myAppModule;

    private Builder() {}

    public MyAppComponent build() {
      if (myAppModule == null) {
        throw new IllegalStateException(MyAppModule.class.getCanonicalName() + " must be set");
      }
      return new DaggerMyAppComponent(this);
    }

    public Builder myAppModule(MyAppModule myAppModule) {
      this.myAppModule = Preconditions.checkNotNull(myAppModule);
      return this;
    }
  }
}
