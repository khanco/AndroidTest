// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.example.test.screens.starcharacterlist.dagger;

import com.example.test.network.ApiManager;
import com.example.test.screens.starcharacterlist.mvvm.viewmodels.StarCharacterListViewModel;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class StartCharacterListModule_ProvideViewModelFactory
    implements Factory<StarCharacterListViewModel> {
  private final StartCharacterListModule module;

  private final Provider<ApiManager> apiManagerProvider;

  public StartCharacterListModule_ProvideViewModelFactory(
      StartCharacterListModule module, Provider<ApiManager> apiManagerProvider) {
    this.module = module;
    this.apiManagerProvider = apiManagerProvider;
  }

  @Override
  public StarCharacterListViewModel get() {
    return Preconditions.checkNotNull(
        module.provideViewModel(apiManagerProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<StarCharacterListViewModel> create(
      StartCharacterListModule module, Provider<ApiManager> apiManagerProvider) {
    return new StartCharacterListModule_ProvideViewModelFactory(module, apiManagerProvider);
  }

  public static StarCharacterListViewModel proxyProvideViewModel(
      StartCharacterListModule instance, ApiManager apiManager) {
    return instance.provideViewModel(apiManager);
  }
}
